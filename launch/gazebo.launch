<?xml version="1.0" ?>
<launch>

  <!-- Load four_wheel_steering model -->
  <param name="robot_description"
         command="$(find xacro)/xacro --inorder '$(find sdv_test)/urdf/tricycle.urdf.xacro'" />

  <param name="/forx_mpc/cte" type="int" value="500"/>
  <param name="/forx_mpc/epsi" type="int" value="200"/>
  <param name="/forx_mpc/vel" type="int" value="100"/>

  <param name="/forx_mpc/delta" type="int" value="10"/>
  <param name="/forx_mpc/acc" type="int" value="10"/>

  <param name="/forx_mpc/delta_diff" type="int" value="25"/>
  <param name="/forx_mpc/acc_diff" type="int" value="25"/>

  <param name="/forx_mpc/delta_lowerbound" type="double" value="-1.0"/>
  <param name="/forx_mpc/delta_upperbound" type="double" value="1.0"/>
  <param name="/forx_mpc/acc_lowerbound" type="double" value="-0.4"/>
  <param name="/forx_mpc/acc_upperbound" type="double" value="0.6"/>

  <!-- <include filename="$(find livox_laser_simulation)/urdf/livox_mid70.xacro"/> -->

  <!-- Load controller config -->
  <!-- <rosparam command="load" file="$(find tricycle_controller)/test/config/tricycle_controller.yaml" /> -->
  <!-- /home/ilkay/github_ws/src/tricycle_controller/tricycle_controller/config/tricycle_controller.yaml -->
  <rosparam command="load" file="$(find sdv_test)/config/tricycle_controllers.yaml" />
  <rosparam command="load" file="$(find sdv_test)/config/hardware_interface.yaml" />
  <!-- Spawn controller -->
  <node name="controller_spawner"
        pkg="controller_manager" type="spawner"
        args="tricycle_controller joint_state_controller --shutdown-timeout 1" />

  <!-- Publish joint states on tf -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>


  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <!-- <arg name="world_name" value="$(find sdv_test)/worlds/warehouse_empty.world"/> -->
    <arg name="world_name" value="$(find sdv_test)/worlds/sdv_test_world.world"/>    
    <arg name="debug" value="$(arg debug)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
    <!-- <arg name="world_name" value="$(find map2gazebo)/worlds/map.sdf"/> -->
  </include>

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model -param robot_description -y 2.0"/>
  
</launch>
